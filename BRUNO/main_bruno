// CONSULTA E RESERVA DE ARMÁRIOS
#include <iostream>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>

#define ALUNO   20
#define FUNCIONARIO 10
#define ARMARIO 25
#define CURSO 5
using namespace std;

typedef struct {
    int dataInicio, dataFim, ano;
} AlunoCurso;

typedef struct {
    char nome[30], email[40];
    int matricula, fone, turmaSerie;
} Aluno;

typedef struct {
    int codigo, dataRec, dataDev;
} Reserva;

typedef struct {
    char nome[30], usuario[10], email[40];
    int matricula, senha, fone;
} Funcionario;

typedef struct {
    char estado[10], disponivel[5];
    int numero;
} Armario;

typedef struct {
    char nome[25];
    int codigo;
} Curso;

int main(){
    setlocale(LC_ALL, "Portuguese");

    int opMenu, opFechar, codigo = 0;
    int opArm, numEdit, codigoDel;
    int opAlu, alunoEdit, alunoDel, totalAlunos = 0, novoTotalAlunos = 0;
    int opFun, funEdit, funDel, totalFuncionarios = 0, novoTotalFuncionarios = 0;

    AlunoCurso AluCurso[ALUNO];
    Aluno alunosCadastrados[ALUNO];
    Reserva Res[ARMARIO];
    Funcionario funcionariosCadastrados[FUNCIONARIO];
    Armario Arm[ARMARIO];
    Curso Crs[CURSO];

// MENU PRINCIPAL
    while(opFechar != 1){
        system("cls");
        cout << "\n*********************  CONSULTA E RESERVA DE ARMÁRIOS ************************ \n\n";
        cout << "1 - ARMÁRIOS.\n";
        cout << "2 - ALUNOS.\n";
        cout << "3 - FUNCIONÁRIOS.\n";
        cout << "4 - Fechar programa.\n\n";
        cout << "Informe qual campo deseja acessar, de acordo com o número: ";
        cin >> opMenu;

        switch(opMenu){
// CONSULTA DE ARMÁRIOS E RESERVAS, RESERVAR ARMÁRIO, EDIT RESERVA, DELET RESERVA.
            case 1:
                    system("cls");
                    cout << "\n*********************  ARMÁRIOS ************************ \n\n";
                    cout << "1 - Consultar armários.\n";
                    cout << "2 - Reservar armário.\n";
                    cout << "3 - Editar armário.\n";
                    cout << "4 - Deletar reserva.\n";
                    cout << "5 - Retornar.\n\n";
                    cout << "Informe a opção desejada, de acordo com o número: ";
                    cin >> opArm;

                    switch(opArm){

    // EXIBIR ARMÁRIOS/RESERVAS
                        case 1:

                           break;
    // SELECIONAR ARMÁRIO PARA EDITAR
                        case 2:
                            system("cls");
                            cout << "\n*********************  EDITAR ARMÁRIO ************************ \n";
                            cout << "Informe o número do armário que deseja editar.\n";
                            cout << "\nNúmero: ";
                            cin >> numEdit;

                            break;
    // DELETAR RESERVA
                        case 3:
                            system("cls");
                            cout << "\n*********************  DELETAR RESERVA ************************ \n";
                            cout << "Informe o código da reserva que deseja deletar.\n";
                            cout << "\nCódigo: ";
                            cin >> codigoDel;

                            break;

    // RETORNAR
                        case 4:
                            break;

                        default:
                                    cout << "\nOpção inválida, por favor tente novamente.\n";
                                    system("pause");
                    }
                break;

// CONSULTAR ALUNOS,CADASTRAR AL, EDIT DADOS AL, DELET AL
            case 2:
                    system("cls");
                    cout << "\n*********************  ALUNOS ************************ \n\n";
                    cout << "1 - Consultar aluno.\n";
                    cout << "2 - Cadastrar aluno.\n";
                    cout << "3 - Editar dados de aluno.\n";
                    cout << "4 - Deletar cadastro de aluno.\n";
                    cout << "5 - Retornar.\n\n";
                    cout << "Informe a opção desejada, de acordo com o número: ";
                    cin >> opAlu;

                    switch(opAlu){

    // CONSULTAR ALUNO
                        case 1:
                            system("cls");
                            cout << "\nAlunos Cadastrados: "<< totalAlunos <<" \n\n";
                            for (int i = 0; i < totalAlunos; i++) {
                                cout << "Aluno " << i + 1 << ":\n";
                                cout << "Nome: " << alunosCadastrados[i].nome << "\t";
                                cout << "Email: " << alunosCadastrados[i].email << "\t";
                                cout << "Matrícula: " << alunosCadastrados[i].matricula << "\t";
                                cout << "Telefone: " << alunosCadastrados[i].fone << "\t";
                                cout << "Turma/Série: " << alunosCadastrados[i].turmaSerie << "\t";
                                cout << "\n---------------------------------------------------------------\n";
                            }
                            system("pause");

                        break;

    // CADASTRAR ALUNO
                        case 2:
                                Aluno novoAluno;

                                system("cls"); // Limpa a tela
                                cin.ignore(); // Limpa o buffer do teclado
                                cout << "\n*********** CADASTRO DE ALUNO ***********\n\n";
                                cout << "Nome: ";
                                cin.getline(novoAluno.nome, 50);
                                cout << "Email: ";
                                cin >> novoAluno.email;
                                cout << "Matrícula: ";
                                cin >> novoAluno.matricula;
                                cout << "Telefone: ";
                                cin >> novoAluno.fone;
                                cout << "Turma/Série: ";
                                cin >> novoAluno.turmaSerie;

                                // Adiciona o novo funcionário ao array e incrementa o contador
                                alunosCadastrados[totalAlunos] = novoAluno;
                                totalAlunos++;

                                system("cls");
                                cout << "\nAluno cadastrado com sucesso.\n";
                                system("pause");
                            break;

    // EDIT DADOS ALUNO
                        case 3:
                            system("cls");
                            cout << "\nAlunos Cadastrados: "<< totalAlunos <<" \n\n";
                            for (int i = 0; i < totalAlunos; i++) {
                                cout << "Aluno " << i + 1 << ":\n";
                                cout << "Nome: " << alunosCadastrados[i].nome << "\t";
                                cout << "Email: " << alunosCadastrados[i].email << "\t";
                                cout << "Matrícula: " << alunosCadastrados[i].matricula << "\t";
                                cout << "Telefone: " << alunosCadastrados[i].fone << "\t";
                                cout << "Turma/Série: " << alunosCadastrados[i].turmaSerie << "\t";
                                cout << "\n---------------------------------------------------------------\n";
                            }

                            cout << "\n*********************  EDITAR DADOS DE ALUNO ************************ \n";
                            cout << "Informe a matrícula do aluno que deseja editar.\n";
                            cout << "\nMatrícula: ";
                            cin >> alunoEdit;

                            for (int i = 0; i < totalAlunos; i++) {
                                if (alunosCadastrados[i].matricula == alunoEdit) {
                                    cout << "Aluno escolhido: " << alunosCadastrados[i].nome << endl;

                                    cout << "Digite o novo nome: ";
                                    cin.ignore();
                                    cin.getline(alunosCadastrados[i].nome, 50);
                                    cout << "Digite o novo email: ";
                                    cin >> alunosCadastrados[i].email;
                                    cout << "Digite a nova matrícula: ";
                                    cin >> alunosCadastrados[i].matricula;
                                    cout << "Digite o novo telefone: ";
                                    cin >> alunosCadastrados[i].fone;
                                    cout << "Digite a nova Turma/Serie: ";
                                    cin >> alunosCadastrados[i].turmaSerie;

                                    cout << "Aluno editado com sucesso!" << endl;
                                    break; // Sair do loop ao encontrar o funcionário
                                }
                            }
                            system("pause");

                            break;

    // DELETE ALUNO
                        case 4:
                            system("cls");
                            cout << "\nAlunos Cadastrados: "<< totalAlunos <<" \n\n";
                            for (int i = 0; i < totalAlunos; i++) {
                                cout << "Aluno " << i + 1 << ":\n";
                                cout << "Nome: " << alunosCadastrados[i].nome << "\t";
                                cout << "Email: " << alunosCadastrados[i].email << "\t";
                                cout << "Matrícula: " << alunosCadastrados[i].matricula << "\t";
                                cout << "Telefone: " << alunosCadastrados[i].fone << "\t";
                                cout << "Turma/Série: " << alunosCadastrados[i].turmaSerie << "\t";
                                cout << "\n---------------------------------------------------------------\n";
                            }

                            cout << "\n*********************  DELETAR CADASTRO DE ALUNO ************************ \n";
                            cout << "Informe a matrícula do aluno que deseja deletar.\n";
                            cout << "\nMatrícula: ";
                            cin >> alunoDel;

                            // Criar um novo array temporário
                            Aluno novosAlunosCadastrados[ALUNO];
                            for (int i = 0; i < totalAlunos; i++) {
                                if (alunoDel != alunosCadastrados[i].matricula) {
                                    novosAlunosCadastrados[novoTotalAlunos] = alunosCadastrados[i];
                                    novoTotalAlunos++;
                                }
                            }

                            if (novoTotalAlunos < totalAlunos) {
                                totalAlunos = novoTotalAlunos;              // Exclusão bem-sucedida, atualizar o array principal
                                for (int i = 0; i < totalAlunos; i++) {
                                    alunosCadastrados[i] = novosAlunosCadastrados[i];
                                }
                                system("cls");
                                cout << "\nCadastro deletado.\n";
                                system("pause");
                            } else {
                                system("cls");
                                cout << "\nAluno não encontrado para exclusão.\n";
                                system("pause");
                            }
                            break;

    //RETORNAR
                        case 5:
                            break;

                        default:
                            cout << "\nOpção inválida, por favor tente novamente.\n";
                            system("pause");
                    }
                break;













// CONSULTAR FUNCIONÁRIOS, CADASTRAR FUNCIONÁRIO, EDIT DADOS FUNCIONÁRIOS, DELET FUNCIONÁRIOS
            case 3:
                    system("cls");
                    cout << "\n*********************  FUNCIONÁRIOS ************************ \n";
                    cout << "Informe a opção desejada, de acordo com o número: \n";
                    cout << "1 - Consultar funcionários.\n";
                    cout << "2 - Cadastrar funcionário.\n";
                    cout << "3 - Editar dados de funcionário.\n";
                    cout << "4 - Deletar cadastro de funcionário.\n";
                    cout << "5 - Retornar.\n\n";
                    cin >> opFun;

                    switch(opFun){

    // CONSULTAR FUNCIONÁRIOS
                        case 1:
                            system("cls");
                            cout << "\nFuncionáios Cadastrados: "<< totalFuncionarios <<" \n\n";
                            for (int i = 0; i < totalFuncionarios; i++) {
                                cout << "Funcionário " << i + 1 << ":\n";
                                cout << "Nome: " << alunosCadastrados[i].nome << "\t";
                                cout << "Email: " << alunosCadastrados[i].email << "\t";
                                cout << "Matrícula: " << alunosCadastrados[i].matricula << "\t";
                                cout << "Telefone: " << alunosCadastrados[i].fone << "\t";
                                cout << "\n---------------------------------------------------------------\n";
                            }
                            system("pause");
                            break;

    // CADASTRAR FUNCIONÁRIO
                        case 2:
                            Funcionario novoFuncionario;
                            system("cls"); // Limpa a tela
                            cout << "\n*********** CADASTRO DE FUNCIONÁRIO ***********\n\n";
                            cout << "Nome: ";
                            cin.ignore(); // Limpa o buffer do teclado
                            cin.getline(novoFuncionario.nome, 50);
                            cout << "Email: ";
                            cin >> novoFuncionario.email;
                            cout << "Matrícula: ";
                            cin >> novoFuncionario.matricula;
                            cout << "Telefone: ";
                            cin >> novoFuncionario.fone;

                            funcionariosCadastrados[totalFuncionarios] = novoFuncionario;   // Adiciona o novo funcionário ao array e incrementa o contador
                            totalFuncionarios++;

                            system("cls");
                            cout << "\nAluno cadastrado com sucesso.\n";
                            system("pause");
                            break;

    // EDIT DADOS FUNCIONÁRIO
                        case 3:
                            system("cls");
                            cout << "\nFuncionáios Cadastrados: "<< totalFuncionarios <<" \n\n";
                            for (int i = 0; i < totalFuncionarios; i++) {
                                cout << "Funcionário " << i + 1 << ":\n";
                                cout << "Nome: " << alunosCadastrados[i].nome << "\t";
                                cout << "Email: " << alunosCadastrados[i].email << "\t";
                                cout << "Matrícula: " << alunosCadastrados[i].matricula << "\t";
                                cout << "Telefone: " << alunosCadastrados[i].fone << "\t";
                                cout << "\n---------------------------------------------------------------\n";
                            }

                            cout << "\n*********************  EDITAR DADOS DE FUNCIONÁRIO ************************ \n";
                            cout << "Informe a matrícula do funcionário que deseja editar.\n";
                            cout << "\nMatrícula: ";
                            cin >> funEdit;

                            for (int i = 0; i < totalFuncionarios; i++) {
                                if (funcionariosCadastrados[i].matricula == funEdit) {
                                    cout << "Funcionário escolhido: " << funcionariosCadastrados[i].nome << endl;

                                    cout << "Digite o novo nome: ";
                                    cin.ignore();
                                    cin.getline(funcionariosCadastrados[i].nome, 50);
                                    cout << "Digite o novo email: ";
                                    cin >> funcionariosCadastrados[i].email;
                                    cout << "Digite a nova matrícula: ";
                                    cin >> funcionariosCadastrados[i].matricula;
                                    cout << "Digite o novo telefone: ";
                                    cin >> funcionariosCadastrados[i].fone;

                                    cout << "Funcionário editado com sucesso!" << endl;
                                    break; // Sair do loop ao encontrar o funcionário
                                    }
                                }
                            system("pause");
                            break;

    // DELET FUNCIONÁRIO
                        case 4:
                            system("cls");
                            cout << "\nFuncionáios Cadastrados: "<< totalFuncionarios <<" \n\n";
                            for (int i = 0; i < totalFuncionarios; i++) {
                                cout << "Funcionário " << i + 1 << ":\n";
                                cout << "Nome: " << alunosCadastrados[i].nome << "\t";
                                cout << "Email: " << alunosCadastrados[i].email << "\t";
                                cout << "Matrícula: " << alunosCadastrados[i].matricula << "\t";
                                cout << "Telefone: " << alunosCadastrados[i].fone << "\t";
                                cout << "\n---------------------------------------------------------------\n";
                            }

                            cout << "\n*********************  DELETAR CADASTRO DE FUNCIONÁRIO ************************ \n";
                            cout << "Informe a matrícula do funcionário que deseja deletar.\n";
                            cout << "\nMatrícula: ";
                            cin >> funDel;

                            // Criar um novo array temporário
                            Funcionario novosFuncionariosCadastrados[FUNCIONARIO];
                            for (int i = 0; i < totalFuncionarios; i++) {
                                if (funDel != funcionariosCadastrados[i].matricula) {
                                novosFuncionariosCadastrados[novoTotalFuncionarios] = funcionariosCadastrados[i];
                                novoTotalFuncionarios++;
                                }
                            }
                            if (novoTotalFuncionarios < totalFuncionarios) {
                                totalFuncionarios = novoTotalFuncionarios;      // Exclusão bem-sucedida, atualizar o array principal
                                for (int i = 0; i < totalFuncionarios; i++) {
                                    funcionariosCadastrados[i] = novosFuncionariosCadastrados[i];
                                }
                                system("cls");
                                cout << "\nCadastro deletado.\n";
                                system("pause");
                            } else {
                                system("cls");
                                cout << "\nFuncionário não encontrado para exclusão.\n";
                                system("pause");
                            }
                            break;
    // RETORNAR
                        case 5:
                            break;

                        default:
                            cout << "\nOpção inválida, por favor tente novamente.\n";
                            system("pause");
                    }
                break;

// ENCERRAR
            case 4:
                cout << "\n\nTem certeza que deseja fechar o programa?\n";
                cout << "[1] sim    [2] não";
                cout << "\nOpção: ";
                cin >> opFechar;

                switch(opFechar){

                    case 1:
                        cout << "\nPrograma encerrado!\n";
                        getchar();
                        break;

                    case 2:
                        break;

                    default:
                        cout << "\nOpção inválida, por favor tente novamente.\n";
                        system("pause");
                }
                break;


            default:
                cout << "\nOpção inválida, por favor tente novamente.\n";
                system("pause");

        }

    }
    cout << "\n\n";
    system("pause");
    return 0;
}
